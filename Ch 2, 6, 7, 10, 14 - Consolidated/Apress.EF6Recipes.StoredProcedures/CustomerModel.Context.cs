//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Data.Entity.Core.Objects;

namespace Apress.EF6Recipes.StoredProcedures
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Linq;
    
    public partial class EF6RecipesContext : DbContext
    {
        public EF6RecipesContext()
            : base("name=EF6RecipesContext")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Customer> Customers { get; set; }
        public DbSet<Member> Members { get; set; }
        public DbSet<Message> Messages { get; set; }
    
        public virtual ObjectResult<Customer> GetCustomers(string company, string contactTitle)
        {
            var companyParameter = company != null ?
                new ObjectParameter("Company", company) :
                new ObjectParameter("Company", typeof(string));
    
            var contactTitleParameter = contactTitle != null ?
                new ObjectParameter("ContactTitle", contactTitle) :
                new ObjectParameter("ContactTitle", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Customer>("GetCustomers", companyParameter, contactTitleParameter);
        }
    
        public virtual ObjectResult<Customer> GetCustomers(string company, string contactTitle, MergeOption mergeOption)
        {
            var companyParameter = company != null ?
                new ObjectParameter("Company", company) :
                new ObjectParameter("Company", typeof(string));
    
            var contactTitleParameter = contactTitle != null ?
                new ObjectParameter("ContactTitle", contactTitle) :
                new ObjectParameter("ContactTitle", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Customer>("GetCustomers", mergeOption, companyParameter, contactTitleParameter);
        }
    
        public virtual ObjectResult<Member> MembersWithTheMostMessages(Nullable<System.DateTime> datesent)
        {
            var datesentParameter = datesent.HasValue ?
                new ObjectParameter("datesent", datesent) :
                new ObjectParameter("datesent", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Member>("MembersWithTheMostMessages", datesentParameter);
        }
    
        public virtual ObjectResult<Member> MembersWithTheMostMessages(Nullable<System.DateTime> datesent, MergeOption mergeOption)
        {
            var datesentParameter = datesent.HasValue ?
                new ObjectParameter("datesent", datesent) :
                new ObjectParameter("datesent", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Member>("MembersWithTheMostMessages", mergeOption, datesentParameter);
        }
    }
}
